% exercise_07_02_02b.m
% 問題 7.2 (2)：フルビッツの安定判別法
% 【Symbolic Math Toolbox が必要】

clear
format compact

disp(' ')
disp('==================================================')
disp(' 問題 7.2 (2)：フルビッツの安定判別法 ')
disp('==================================================')

syms s
syms w real
syms kP real

disp(' ')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')
disp(' 　　　　　　　　　               1       ')
disp(' 制御対象の伝達関数 P(s) = ---------------')
disp(' 　　　　　　　　　        s(s + 1)(s + 2)')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')

Ps = 1/(s*(s + 1)*(s + 2))
Ps = collect(Ps,s)          % s について降べきの順

disp(' ')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')
disp(' P(s) = Np(s)/Dp(s)')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')

[Np Dp] = numden(Ps)

disp(' ')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')
disp(' コントローラの伝達関数 C(s) = kP > 0 ')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')

Cs = kP

disp(' ')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')
disp(' C(s) = Nc(s)/Dc(s)')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')

[Nc Dc] = numden(Cs)

disp(' ')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')
disp(' 特性多項式 Δ(s) = Dp(s)*Dc(s) + Np(s)*Nc(s)')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')

Delta = Dp*Dc + Np*Nc;
Delta = collect(Delta,s)

disp(' ')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')
disp(' フルビッツの安定判別法')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')

hurwitz_sym     % hurwitz_sym.m の実行

disp(' ')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')
disp(' kP > 0 であることを考慮した安定条件')
disp('++++++++++++++++++++++++++++++++++++++++++++++++++')

sol = solve(cond & kP > 0, kP,'ReturnConditions',true);
condition = subs(sol.conditions,kP)

